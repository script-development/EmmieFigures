[{"filePath":"C:\\Code\\www\\rappPresence\\components\\Canvas.vue","messages":[{"ruleId":"vue/html-self-closing","severity":2,"message":"Require self-closing on HTML elements (<div>).","line":2,"column":5,"nodeType":"VElement","endLine":2,"endColumn":28,"fix":{"range":[32,39],"text":"/>"}},{"ruleId":"no-undef","severity":2,"message":"'vehicle' is not defined.","line":100,"column":44,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":51},{"ruleId":"no-undef","severity":2,"message":"'vehicle' is not defined.","line":101,"column":46,"nodeType":"Identifier","messageId":"undef","endLine":101,"endColumn":53},{"ruleId":"no-undef","severity":2,"message":"'vehicle' is not defined.","line":102,"column":46,"nodeType":"Identifier","messageId":"undef","endLine":102,"endColumn":53},{"ruleId":"no-undef","severity":2,"message":"'vehicle' is not defined.","line":103,"column":47,"nodeType":"Identifier","messageId":"undef","endLine":103,"endColumn":54},{"ruleId":"no-undef","severity":2,"message":"'vehicle' is not defined.","line":106,"column":44,"nodeType":"Identifier","messageId":"undef","endLine":106,"endColumn":51},{"ruleId":"max-lines-per-function","severity":1,"message":"Async arrow function has exceeded the limit of lines allowed by 8. Maximum allowed number of lines per function is 30.","line":107,"column":1,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":114,"endColumn":2},{"ruleId":"no-undef","severity":2,"message":"'vehicle' is not defined.","line":107,"column":46,"nodeType":"Identifier","messageId":"undef","endLine":107,"endColumn":53},{"ruleId":"no-undef","severity":2,"message":"'vehicle' is not defined.","line":108,"column":46,"nodeType":"Identifier","messageId":"undef","endLine":108,"endColumn":53},{"ruleId":"no-undef","severity":2,"message":"'vehicle' is not defined.","line":109,"column":47,"nodeType":"Identifier","messageId":"undef","endLine":109,"endColumn":54},{"ruleId":"max-lines-per-function","severity":1,"message":"Arrow function has exceeded the limit of lines allowed by 1. Maximum allowed number of lines per function is 30.","line":111,"column":1,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":111,"endColumn":6}],"errorCount":9,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\r\n    <div id=\"canvas\"></div>\r\n</template>\r\n\r\n<script setup>\r\n/** @typedef {import('p5')} p5 */\r\n/** @typedef {import('p5').Vector} vector */\r\nimport {onMounted} from '@vue/runtime-core';\r\n\r\n/** @type {p5} */\r\nlet p5;\r\n\r\n/** @type {vector} */\r\nlet vector;\r\n\r\nlet vehicles = [];\r\nlet particles = 500;\r\n\r\nlet canvasWidth, canvasHeight;\r\n\r\nclass Motion {\r\n    constructor(x, y, w, h) {\r\n        this.pos = p5.createVector(x, y);\r\n        // this.vel = p5.createVector(0, 0);\r\n        // this.vel = p5.Vector.random2D();\r\n        // this.vel = p5.constructor.Vector.random2D();\r\n        this.vel = vector.random2D();\r\n        this.vel.setMag(5);\r\n        this.acc = p5.createVector(0, 0);\r\n        this.w = w;\r\n        this.h = h;\r\n        this.up = false;\r\n        this.down = false;\r\n        this.left = false;\r\n        this.right = false;\r\n        this.maxSpeed = 5;\r\n        this.accSpeed = 0.05;\r\n    }\r\n    update() {\r\n        // keyboard input\r\n        if (this.up) this.acc.y -= this.accSpeed;\r\n        if (this.down) this.acc.y += this.accSpeed;\r\n        if (this.left) this.acc.x -= this.accSpeed;\r\n        if (this.right) this.acc.x += this.accSpeed;\r\n\r\n        this.vel.add(this.acc);\r\n        this.vel.limit(this.maxSpeed);\r\n        this.pos.add(this.vel);\r\n        this.acc.mult(0);\r\n    }\r\n    showRect() {\r\n        p5.fill(255, 0, 0);\r\n        p5.strokeWeight(2);\r\n        p5.stroke(255);\r\n        p5.rect(this.pos.x, this.pos.y, this.w, this.h);\r\n    }\r\n    edgesRect() {\r\n        if (this.pos.x < 0) {\r\n            this.pos.x = 0;\r\n            this.vel.x *= -1;\r\n        } else if (this.pos.x + this.w > canvasWidth) {\r\n            this.pos.x = canvasWidth - this.w;\r\n            this.vel.x *= -1;\r\n        }\r\n        if (this.pos.y < 0) {\r\n            this.pos.y = 0;\r\n            this.vel.y *= -1;\r\n        } else if (this.pos.y + this.h > canvasHeight) {\r\n            this.pos.y = canvasHeight - this.h;\r\n            this.vel.y *= -1;\r\n        }\r\n    }\r\n}\r\n\r\nonMounted(async () => {\r\n    const P5 = (await import('p5')).default;\r\n    const Vector = (await import('p5')).Vector;\r\n    vector = Vector;\r\n    /** @param {p5} p5init */\r\n    const script = p5init => {\r\n        p5 = p5init;\r\n        p5.setup = () => {\r\n            canvasWidth = 1024;\r\n            canvasHeight = 576;\r\n            // p5.createCanvas(window.innerWidth, window.innerHeight);\r\n            p5.createCanvas(canvasWidth, canvasHeight);\r\n            for (let i = 0; i < particles; i++) {\r\n                vehicles.push(new Motion(400, 200, 5, 5));\r\n            }\r\n        };\r\n        p5.draw = () => {\r\n            p5.background(0);\r\n            for (let i = 0; i < particles; i++) {\r\n                vehicles[i].update();\r\n                vehicles[i].edgesRect();\r\n                vehicles[i].showRect();\r\n            }\r\n        };\r\n        p5.keyPressed = () => {\r\n            if (p5.keyCode == p5.UP_ARROW) vehicle.up = true;\r\n            if (p5.keyCode == p5.DOWN_ARROW) vehicle.down = true;\r\n            if (p5.keyCode == p5.LEFT_ARROW) vehicle.left = true;\r\n            if (p5.keyCode == p5.RIGHT_ARROW) vehicle.right = true;\r\n        };\r\n        p5.keyReleased = () => {\r\n            if (p5.keyCode == p5.UP_ARROW) vehicle.up = false;\r\n            if (p5.keyCode == p5.DOWN_ARROW) vehicle.down = false;\r\n            if (p5.keyCode == p5.LEFT_ARROW) vehicle.left = false;\r\n            if (p5.keyCode == p5.RIGHT_ARROW) vehicle.right = false;\r\n        };\r\n    };\r\n    const canvas = document.getElementById('canvas');\r\n    if (canvas) new P5(script, canvas);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n#canvas {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n</style>\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Code\\www\\rappPresence\\pages\\about\\index.page.vue","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Code\\www\\rappPresence\\pages\\index\\index.page.vue","messages":[{"ruleId":"vue/multi-word-component-names","severity":2,"message":"Component name \"index.page\" should always be multi-word.","line":1,"column":1,"nodeType":null,"messageId":"unexpected"}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\r\n    <h1>Home</h1>\r\n    <a href=\"/about\">Go To About Page</a>\r\n</template>\r\n","usedDeprecatedRules":[]}]